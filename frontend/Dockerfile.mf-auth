# syntax=docker/dockerfile:1

FROM node:22-alpine AS build-stage

ENV NODE_ENV production
WORKDIR /app
COPY . /build
RUN \
<<EOF
set -e

cd /build/shared-library
export npm_config_loglevel=error
npm install --include dev --include prod --no-fund --no-audit --no-save

cd /build/microfrontend/microfrontend-auth
# Hide deprecation and other warnings useless for robots
export npm_config_loglevel=error
npm install --include dev --include prod --no-fund --no-audit --no-save
# currently the behavior of production and development builds differ for unknown reasons
npm run build:dev
cp -pr dist/ /app
rm -rf /build
EOF

FROM nginxinc/nginx-unprivileged:1-alpine-slim AS production-stage
COPY --from=build-stage /app/dist /usr/share/nginx/html
