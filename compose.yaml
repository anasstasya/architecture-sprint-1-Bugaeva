services:

  mongo:
    image: mongo
    restart: always
    logging:
      driver: none
    healthcheck:
      test:  echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  backend-test:
    build:
      context: backend
      dockerfile: Dockerfile
    environment:
      DB_ADDRESS: mongodb://mongo:27017/mestodb
    command: npm run lint
    restart: 'no'
    depends_on:
      mongo:
        condition: service_healthy

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    environment:
      DB_ADDRESS: mongodb://mongo:27017/mestodb
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - 3001:3000
    healthcheck:
      interval: 10s
      timeout: 2s 
      start_period: 15s 
      retries: 5 
      test: node healthcheck.js

  frontend-shell:
    build:
      context: frontend
      dockerfile: Dockerfile.mf-shell
    ports:
      - 3000:8080
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "--fail", "-G", "http://localhost:3000" ]
      start_period: 15s
      interval: 10s
      timeout: 2s
      retries: 5

  frontend-test:
    build:
      context: frontend
      dockerfile: Dockerfile.test
    restart: 'no'
    environment:
          CI: true
    depends_on:
      frontend-shell:
        condition: service_healthy
